4.1.1
show databases;
use world;
DELIMITER //
CREATE PROCEDURE get_ppl_visited_country (IN cty varchar(52))
BEGIN
  SET @cty = CONCAT("%", cty, "%");
  select 	
		person.personID, 
       person.personname, 
		city.name, 
        da.dateArrived,
	    (select dc.name from country dc where dc.code = city.countrycode) CountryName
        from (( person person
Inner join	hasvisitedcity da ON  person.personID = da.personID)
Inner join	city city ON da.cityId = city.id)
where city.countrycode in (select g.code from country g where g.name like @cty);
END //
DELIMITER ;
call get_ppl_visited_country("land");

4.1.2

show databases;
use world;
DELIMITER //
 Create function ren_continent (origional VARCHAR(35)) RETURNS VARCHAR(30) Deterministic
    Begin
     IF(origional like 'North America' or origional like 'South America') Then
     SET actual = "Americas";
    ELSEIF origional= "Oceania" Then
    SET actual = "Australia";
     elseif origional= "Antartica" Then
     SET actual = "South Pole";
     END IF;
     Return(actual);
     end //
Select ren_continent("Oceania");


4.1.3

show databases;
use world;
Select country.continent, country.name, country.population
from country country
where country.population >0
and country.population = (select max(b.population) from country b where b.continent = country.continent)
order by country.continent,country.name,country.population;

4.1.4

show databases;
use world;

Select 
city.name City,coun.name Country,coun.population population from   
(( country coun
Inner join	city city ON city.countrycode = coun.code)
Inner join	hasvisitedcity hc ON  hc.cityId = city.id )
where 
hc.personID in (select age.personID from person age where age.age = (select min(per.age) from person per))
and coun.population = (select min(cou.population) from country cou
	where cou.code in (select cy.countrycode from city cy where 
		cy.id in (select hy.cityid from hasvisitedcity hy where
			hy.personID in (select pi.personID from person pi 
			where pi.age = (select min(per.age) from person per)))));

4.1.5

show databases;
use world;

 select district,
   case
     when district = "Eastern Cape"then sum(population)+1000
   when district = "Free State"then sum(population)+2000
   when district = "Western Cape"then sum(population)-10000
   else sum(population)
    end  population
  from city  where countrycode in (select code from country where name like "%south%africa%")group by district;

4.1.6

show databases;
use world;
select name, Indepyear, 
case
	when Indepyear is null 
    then "N/A" 
    when cast(year(curdate()) as signed) - Indepyear < 10 
    then Concat("New ",GovernmentForm)
    when (cast(year(curdate()) as signed) - Indepyear >= 10)  AND (cast(year(curdate()) as signed) - Indepyear < 50)
    then Concat("Modern ",GovernmentForm)
    when (cast(year(curdate()) as signed) - Indepyear >= 50)  AND (cast(year(curdate()) as signed) - Indepyear < 100)
    then Concat("Early ",GovernmentForm)
	when (cast(year(curdate()) as signed) - Indepyear >= 100)
    then Concat("Old ",GovernmentForm)
    else "old"    
end Description
from country
order by Indepyear;


